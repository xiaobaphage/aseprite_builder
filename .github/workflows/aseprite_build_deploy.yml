name: Build and deploy Aseprite

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - master
      - fix

env:
  BUILD_TYPE: Release

jobs:
  check-version:
    name: Check latest Aseprite release
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.version_info.outputs.latest_tag }}
      should_build: ${{ steps.should_build.outputs.should_build }}
    steps:
    - name: Get latest version info
      id: version_info
      run: |
        data=$(curl -sL https://api.github.com/repos/aseprite/aseprite/releases/latest)
        LATEST_TAG=$(echo "${data}" | jq -r '.tag_name')
        VERSION_INFO=$(echo "${data}" | jq -r '.body')

        echo "latest_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
        echo "version_info<<EOF" >> $GITHUB_OUTPUT
        echo "$VERSION_INFO" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Should we start new build?
      id: should_build
      if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/fix' || steps.version_check.outputs.cache_hit != 'true'
      run: echo "should_build=true" >> $GITHUB_OUTPUT

  build-aseprite:
    name: Build Aseprite
    needs: check-version
    if: ${{ needs.check-version.outputs.should_build }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
      fail-fast: false
    steps:
      # ...（保留原有所有构建步骤，从安装依赖到生成 zip 文件）...

      - name: Create Release with Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check-version.outputs.latest_tag }}
          release_name: Release Aseprite ${{ needs.check-version.outputs.latest_tag }}
          body: |
            ${{ needs.check-version.outputs.version_info }}
            Build artifacts for platforms:
            - Windows
            - Ubuntu
            - macOS
          files: |
            aseprite/build/bin/Aseprite-${{ needs.check-version.outputs.latest_tag }}-windows-latest.zip
            aseprite/build/bin/Aseprite-${{ needs.check-version.outputs.latest_tag }}-ubuntu-latest.zip
            aseprite/build/bin/Aseprite-${{ needs.check-version.outputs.latest_tag }}-macOS-latest.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
